"""
Initial migration.

Revision ID: 01182f408d4c
Revises:
Create Date: 2021-10-24 22:44:25.109713

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "01182f408d4c"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Commands auto generated by Alembic."""
    op.create_table(
        "api_botsetting",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_index(
        op.f("ix_api_botsetting_name"), "api_botsetting", ["name"], unique=False
    )
    op.create_table(
        "api_documentationlink",
        sa.Column("package", sa.String(length=50), nullable=False),
        sa.Column("base_url", sa.String(length=200), nullable=False),
        sa.Column("inventory_url", sa.String(length=200), nullable=False),
        sa.PrimaryKeyConstraint("package"),
    )
    op.create_index(
        op.f("ix_api_documentationlink_package"),
        "api_documentationlink",
        ["package"],
        unique=False,
    )
    op.create_table(
        "api_filterlist",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("type", sa.String(length=50), nullable=False),
        sa.Column("allowed", sa.Boolean(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("content", "type", name="filter_list_uq"),
    )
    op.create_table(
        "api_offensivemessage",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("channel_id", sa.BigInteger(), nullable=False),
        sa.Column("delete_date", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "api_offtopicchannelname",
        sa.Column("name", sa.String(length=96), nullable=False),
        sa.Column("used", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_index(
        op.f("ix_api_offtopicchannelname_name"),
        "api_offtopicchannelname",
        ["name"],
        unique=False,
    )
    op.create_table(
        "api_role",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("colour", sa.Integer(), nullable=False),
        sa.Column("permissions", sa.BigInteger(), nullable=False),
        sa.Column("position", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "api_user",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.Column("discriminator", sa.SmallInteger(), nullable=False),
        sa.Column("in_guild", sa.Boolean(), nullable=False),
        sa.Column("roles", sa.ARRAY(sa.BigInteger()), nullable=False),
        sa.CheckConstraint("discriminator >= 0"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "repositorymetadata",
        sa.Column("last_updated", sa.DateTime(timezone=True), nullable=False),
        sa.Column("repo_name", sa.String(length=40), nullable=False),
        sa.Column("description", sa.String(length=400), nullable=False),
        sa.Column("forks", sa.Integer(), nullable=False),
        sa.Column("stargazers", sa.Integer(), nullable=False),
        sa.Column("language", sa.String(length=20), nullable=False),
        sa.PrimaryKeyConstraint("repo_name"),
    )
    op.create_index(
        op.f("ix_repositorymetadata_repo_name"),
        "repositorymetadata",
        ["repo_name"],
        unique=False,
    )
    op.create_table(
        "api_infraction",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("inserted_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("type", sa.String(length=10), nullable=False),
        sa.Column("reason", sa.Text(), nullable=True),
        sa.Column("hidden", sa.Boolean(), nullable=False),
        sa.Column("actor_id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["actor_id"],
            ["api_user.id"],
            ondelete="CASCADE",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["api_user.id"],
            ondelete="CASCADE",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_api_infraction_actor_id"), "api_infraction", ["actor_id"], unique=False
    )
    op.create_index(
        op.f("ix_api_infraction_user_id"), "api_infraction", ["user_id"], unique=False
    )
    op.create_index(
        "unique_active_infraction_per_type_per_user",
        "api_infraction",
        ["user_id", "type"],
        unique=True,
    )
    op.create_table(
        "api_message",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("channel_id", sa.BigInteger(), nullable=False),
        sa.Column("content", sa.String(length=4000), nullable=False),
        sa.Column(
            "embeds", sa.ARRAY(postgresql.JSONB(astext_type=sa.Text())), nullable=False
        ),
        sa.Column("author_id", sa.BigInteger(), nullable=False),
        sa.Column("attachments", sa.ARRAY(sa.String(length=512)), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["api_user.id"],
            ondelete="CASCADE",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_api_message_author_id"), "api_message", ["author_id"], unique=False
    )
    op.create_table(
        "api_messagedeletioncontext",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("creation", sa.DateTime(timezone=True), nullable=False),
        sa.Column("actor_id", sa.BigInteger(), nullable=True),
        sa.ForeignKeyConstraint(
            ["actor_id"],
            ["api_user.id"],
            ondelete="CASCADE",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_api_messagedeletioncontext_actor_id"),
        "api_messagedeletioncontext",
        ["actor_id"],
        unique=False,
    )
    op.create_table(
        "api_nomination",
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("inserted_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("end_reason", sa.Text(), nullable=False),
        sa.Column("ended_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("reviewed", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["api_user.id"],
            ondelete="CASCADE",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_api_nomination_user_id"), "api_nomination", ["user_id"], unique=False
    )
    op.create_table(
        "api_reminder",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("channel_id", sa.BigInteger(), nullable=False),
        sa.Column("content", sa.String(length=1500), nullable=False),
        sa.Column("expiration", sa.DateTime(timezone=True), nullable=False),
        sa.Column("author_id", sa.BigInteger(), nullable=False),
        sa.Column("jump_url", sa.String(length=88), nullable=False),
        sa.Column("mentions", sa.ARRAY(sa.BigInteger()), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["api_user.id"],
            ondelete="CASCADE",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_api_reminder_author_id"), "api_reminder", ["author_id"], unique=False
    )
    op.create_table(
        "api_deletedmessage",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("deletion_context_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["deletion_context_id"],
            ["api_messagedeletioncontext.id"],
            ondelete="CASCADE",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_api_deletedmessage_deletion_context_id"),
        "api_deletedmessage",
        ["deletion_context_id"],
        unique=False,
    )
    op.create_table(
        "api_nominationentry",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("reason", sa.Text(), nullable=False),
        sa.Column("inserted_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("actor_id", sa.BigInteger(), nullable=False),
        sa.Column("nomination_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["actor_id"],
            ["api_user.id"],
            ondelete="CASCADE",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.ForeignKeyConstraint(
            ["nomination_id"],
            ["api_nomination.id"],
            ondelete="CASCADE",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_api_nominationentry_actor_id"),
        "api_nominationentry",
        ["actor_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_api_nominationentry_nomination_id"),
        "api_nominationentry",
        ["nomination_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Commands auto generated by Alembic."""
    op.drop_index(
        op.f("ix_api_nominationentry_nomination_id"), table_name="api_nominationentry"
    )
    op.drop_index(
        op.f("ix_api_nominationentry_actor_id"), table_name="api_nominationentry"
    )
    op.drop_table("api_nominationentry")
    op.drop_index(
        op.f("ix_api_deletedmessage_deletion_context_id"),
        table_name="api_deletedmessage",
    )
    op.drop_table("api_deletedmessage")
    op.drop_index(op.f("ix_api_reminder_author_id"), table_name="api_reminder")
    op.drop_table("api_reminder")
    op.drop_index(op.f("ix_api_nomination_user_id"), table_name="api_nomination")
    op.drop_table("api_nomination")
    op.drop_index(
        op.f("ix_api_messagedeletioncontext_actor_id"),
        table_name="api_messagedeletioncontext",
    )
    op.drop_table("api_messagedeletioncontext")
    op.drop_index(op.f("ix_api_message_author_id"), table_name="api_message")
    op.drop_table("api_message")
    op.drop_index(
        "unique_active_infraction_per_type_per_user", table_name="api_infraction"
    )
    op.drop_index(op.f("ix_api_infraction_user_id"), table_name="api_infraction")
    op.drop_index(op.f("ix_api_infraction_actor_id"), table_name="api_infraction")
    op.drop_table("api_infraction")
    op.drop_index(
        op.f("ix_repositorymetadata_repo_name"), table_name="repositorymetadata"
    )
    op.drop_table("repositorymetadata")
    op.drop_table("api_user")
    op.drop_table("api_role")
    op.drop_index(
        op.f("ix_api_offtopicchannelname_name"), table_name="api_offtopicchannelname"
    )
    op.drop_table("api_offtopicchannelname")
    op.drop_table("api_offensivemessage")
    op.drop_table("api_filterlist")
    op.drop_index(
        op.f("ix_api_documentationlink_package"), table_name="api_documentationlink"
    )
    op.drop_table("api_documentationlink")
    op.drop_index(op.f("ix_api_botsetting_name"), table_name="api_botsetting")
    op.drop_table("api_botsetting")
    # ### end Alembic commands ###
