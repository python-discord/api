[tool.poetry]
name = "Python Discord API"
version = "0.1.0"
description = "A FastAPI-based service that allows our services to communicatie with our database."
authors = ["Python Discord <projects+api@pythondiscord.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^1.8.2"
fastapi = "^0.65.2"
SQLAlchemy = "^1.4.18"
alembic = "^1.6.5"
uvicorn = {extras = ["standard"], version = "^0.14.0"}
gunicorn = "^20.1.0"

[tool.poetry.dev-dependencies]
flake8 = "^3.9.2"
flake8-annotations = "^2.6.2"
flake8-bandit = "^2.1.2"
flake8-bugbear = "^21.4.3"
flake8-docstrings = "^1.6.0"
flake8-import-order = "^0.18.1"
flake8-string-format = "^0.3.0"
flake8-tidy-imports = "^4.3.0"
pep8-naming = "^0.11.1"
pytest = "^6.2.4"
pytest-asyncio = "^0.15.1"
httpx = "^0.18.2"
hypothesis = "^6.14.0"
black = "^21.6b0"
watchgod = "^0.7"
taskipy = "^1.9.0"
pre-commit = "^2.15.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.taskipy.tasks]
start = { cmd = "uvicorn api.main:app", help = "Run the API without reload enabled - useful in a production environment" }
dev = { cmd = "uvicorn api.main:app --reload", help = "Run the API with reload enabled - useful in a development environment" }
pre-commit = { cmd = "pre-commit install", help = "Install pre-commit into the repository"}
lint = { cmd = "pre-commit run --all-files", help = "Run the linting process defined in pre-commit" }
test = { cmd = "pytest", help = "Run the test suite on the current code" }
